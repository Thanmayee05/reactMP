{"version":3,"sources":["config/Fire.js","components/Login.js","components/Marker.js","components/Map.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","Login","props","login","e","preventDefault","auth","signInWithEmailAndPassword","state","email","password","catch","error","setState","fireErrors","message","register","createUserWithEmailAndPassword","getAction","action","formTitle","loginBtn","handleChange","target","name","value","errorNotification","this","className","submitBtn","type","onClick","login_register","class","href","style","fontSize","color","fontFamily","fontWeight","id","placeholder","onChange","Component","Marker","backgroundColor","cursor","title","SimpleMap","useState","lat","lng","center","height","width","marginTop","bootstrapURLKeys","key","defaultCenter","defaultZoom","Home","logout","console","log","logginStatus","signOut","window","alert","onCollectionUpdate","querySnapshot","markerslist","forEach","doc","data","long","push","onchange","handleMarker","event","ref","add","then","docRef","files","image","file","refs","reader","FileReader","url","readAsDataURL","onloadend","imgSrc","result","bind","handleUpload","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","location","reload","firestore","collection","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","delete","history","textAlign","float","marginRight","marginLeft","Map","google","zoom","margin","multiple","src","alt","App","user","authListener","onAuthStateChanged","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c226accb.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/storage';\r\nimport 'firebase/auth';\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBMPMKYba0QsSRKH4cby1WKenFgTlI16yY\",\r\n    authDomain: \"demoproject-a62a8.firebaseapp.com\",\r\n    databaseURL: \"https://demoproject-a62a8.firebaseio.com\",\r\n    projectId: \"demoproject-a62a8\",\r\n    storageBucket: \"demoproject-a62a8.appspot.com\",\r\n    messagingSenderId: \"86371532305\",\r\n    appId: \"1:86371532305:web:0ccc3eaf8d663d62633bb0\",\r\n    measurementId: \"G-P1CK7CS8XD\"\r\n  };\r\n\r\n const fire=firebase.initializeApp(firebaseConfig);\r\n const storage = firebase.storage();\r\n export  {\r\n  storage, fire as default\r\n}\r\n","import React, {Component} from 'react';\r\nimport fire from '../config/Fire';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name:'',\r\n            fireErrors: '',\r\n            formTitle: 'Login',\r\n            loginBtn: true\r\n        }\r\n    }\r\n\r\n    login = e => {\r\n        e.preventDefault();\r\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .catch((error) => {\r\n            this.setState({fireErrors: error.message})\r\n        });\r\n    }\r\n    \r\n    register = e => {\r\n        e.preventDefault();\r\n        fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n        .catch((error) => {\r\n            this.setState({fireErrors: error.message})\r\n        });\r\n    }\r\n\r\n    getAction = action => {\r\n        if(action === 'reg'){\r\n            this.setState({formTitle: 'Register', loginBtn: false, fireErrors: ''});\r\n        }else{\r\n            this.setState({formTitle: 'Login', loginBtn: true, fireErrors: ''});\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    render(){\r\n\r\n        let errorNotification = this.state.fireErrors ? \r\n            ( <div className=\"Error\"> {this.state.fireErrors} </div> ) : null;\r\n\r\n        let submitBtn = this.state.loginBtn ? \r\n            (<input className=\"loginBtn\" type=\"submit\" onClick={this.login} value=\"Submit\" />) : \r\n            (<input className=\"loginBtn\" type=\"submit\" onClick={this.register} value=\"Submit\" />);\r\n\r\n        let login_register = this.state.loginBtn ?\r\n            (<button className=\"registerBtn\" onClick={() => this.getAction('reg')}>New User? Register</button>) : \r\n            (<button className=\"registerBtn\" onClick={() => this.getAction('login')}>Existing user? Login</button>)\r\n\r\n        return(\r\n            <div>\r\n            <div className=\"bgimg\">\r\n                <div class=\"header\">\r\n                    <a href=\"#home\" class=\"logo\"></a>\r\n                    <a href=\"#default\" class=\"header-left\" style={{fontSize:\"32px\"}}>She<span style={{color:'rgb(8, 49, 231)',fontFamily:'Titillium Web',fontWeight:'bold',fontSize:'36px'}}>Help</span></a>\r\n                    <div class=\"header-right\">\r\n                        <a class=\"active\" href=\"#home\">Home</a>\r\n                        <a href=\"#contact\">Contact</a>\r\n                        <a href=\"#About\">About</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form_block\">\r\n                    <div id=\"title\">{this.state.formTitle}</div>\r\n                    <div className=\"body\">\r\n                        {errorNotification}\r\n                        <form>\r\n                            Email ID\r\n                            <br></br>\r\n                            <input type=\"text\" \r\n                            value={this.state.email} \r\n                            placeholder=\"EmailID\"\r\n                            onChange={this.handleChange} \r\n                            name=\"email\" />\r\n                            Password\r\n                            <br></br>\r\n                            <input type=\"password\" \r\n                            value={this.state.password} \r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Password\" \r\n                            name=\"password\" />\r\n\r\n                            {submitBtn}\r\n                        </form>\r\n                        {login_register}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './loginpage.css';\r\n\r\nconst Marker = (props: any) => {\r\n    const { color, name, id } = props;\r\n    return (\r\n      <div className=\"markerBlock\"\r\n        style={{ backgroundColor: color, cursor: 'pointer'}}\r\n        title={name}\r\n      />\r\n    );\r\n  };\r\n\r\n  export default Marker;","import React, { useState } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from './Marker';\r\nimport {showMarkerinLoc} from './Home';\r\n\r\nconst SimpleMap = (props: any) => {\r\n    const [center, setCenter] = useState({lat: 17.387140, lng: 78.491684});\r\n    const [zoom, setZoom] = useState(11);\r\n    return (\r\n        <div style={{ height: '600px', width: '900px' , marginTop:'20px'}}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyANrdYhelVz0--nvOP1Ov9556d7xCoI_gE' }}\r\n          defaultCenter={center}\r\n          defaultZoom={15}\r\n        >\r\n          <Marker\r\n            lat={17.3850}\r\n            lng={78.4867}\r\n            name=\"My Marker\"\r\n            color=\"rgb(207, 40, 40)\"\r\n          />\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SimpleMap;","import React, {Component} from 'react';\r\nimport fire,{storage} from '../config/Fire';\r\n//import { Link } from 'react-router-dom';\r\nimport './loginpage.css';\r\nimport Map from './Map';\r\n//import ReactDOM from \"react-dom\";\r\n\r\nclass Home extends Component {\r\n\r\n    logout = () => {\r\n      console.log(\"Sending a logout request to the API...\");\r\n      this.setState({ logginStatus: false });\r\n      fire.auth().signOut();\r\n      window.alert(\"Logging out!\");\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = fire.firestore().collection('coordinates');\r\n        this.state = {\r\n          image: null,\r\n          imgSrc: \"\",\r\n          progress: 0,\r\n          markerslist:[],\r\n          long:'',\r\n          lat:'',      \r\n        };\r\n    }\r\n    \r\n    showMarkerinLoc()\r\n    {\r\n      navigator.geolocation.getCurrentPosition((position)=>\r\n       this.setState({\r\n          long:position.coords.longitude,\r\n          lat:position.coords.latitude\r\n        }),\r\n      );\r\n      const long=this.state.long;\r\n      const lat=this.state.lat;\r\n      return long,lat;\r\n    }\r\n    onCollectionUpdate = (querySnapshot) => {\r\n      const markerslist = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const { long,lat } = doc.data();\r\n        markerslist.push({\r\n          key:'',\r\n          doc, // DocumentSnapshot\r\n          long,\r\n          lat,\r\n        });\r\n      });\r\n      this.setState({\r\n        markerslist\r\n      });\r\n    }\r\n    onchange = (e) => {\r\n      const state = this.state\r\n      state[e.target.name] = e.target.value;\r\n      this.setState({markerslist:state});\r\n    }\r\n    handleMarker=(event)=>{\r\n      event.preventDefault();\r\n      const {long,lat}=this.state;\r\n      this.ref.add({\r\n          long,\r\n          lat\r\n        }).then((docRef)=>{\r\n          this.setState({\r\n            long:'',\r\n            lat:''\r\n          });\r\n          //this.props.history.push(\"/\")\r\n          window.alert(\"Added marker\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n          window.alert(\"Error adding\");\r\n        });\r\n      \r\n    }\r\n    delete(id){\r\n      fire.firestore().collection('coordinates').doc(id).delete().then(() => {\r\n        console.log(\"Document successfully deleted!\");\r\n        window.alert(\"deleting marker\")\r\n        this.props.history.push(\"/\")\r\n      }).catch((error) => {\r\n        console.error(\"Error removing document: \", error);\r\n        window.alert(\"Error deleting\");\r\n      });\r\n    } \r\n\r\n      \r\n      handleChange = (event) => {\r\n        if (event.target.files[0]) {\r\n            const image = event.target.files[0];\r\n            this.setState(() => ({ image }));\r\n        }\r\n        var file = this.refs.file.files[0];\r\n        var reader = new FileReader();\r\n        var url = reader.readAsDataURL(file);\r\n        reader.onloadend = function (e) {\r\n            this.setState({\r\n                imgSrc: [reader.result],\r\n                })\r\n            }.bind(this);\r\n        console.log(url)\r\n      };\r\n      \r\n    \r\n      handleUpload = () => {\r\n        const { image } = this.state;\r\n        if(image){\r\n          const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n        uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n            // progress function ...\r\n            const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setState({ progress });\r\n        },\r\n        error => {\r\n            // Error function ...\r\n            console.log(error);\r\n            window.alert(\"Error in submission.\")\r\n        },\r\n        () => {\r\n            // complete function ...\r\n            storage\r\n            .ref(\"images\")\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n                this.setState({ imgSrc:url });\r\n            window.alert(\"Uploaded successfully\");\r\n            window.location.reload(false);\r\n            });\r\n         });\r\n        }\r\n        else{\r\n          window.alert(\"Please select your File!\")\r\n        }\r\n        \r\n      };\r\n      \r\n      \r\n    render() {\r\n      \r\n      \r\n        return (\r\n          <div>\r\n            <div class=\"header\">\r\n                <a href=\"#home\" class=\"logo\"> </a>\r\n                <a href=\"#default\" class=\"header-left\" style={{fontSize:\"32px\"}}>She<span style={{color:'rgb(8, 49, 231)',fontFamily:'Titillium Web',fontWeight:'bold',fontSize:'36px'}}>Help</span></a>\r\n                \r\n                <div class=\"header-right\">\r\n                    <a class=\"active\" href=\"#home\">Home</a>\r\n                    <a href=\"#contact\">Contact</a>\r\n                    <a href=\"#About\">About</a>\r\n                </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"mapsbg\">\r\n                <div style={{textAlign:\"center\",fontSize:'40px'}}>\r\n                    Welcome User!\r\n                    <button onClick={this.logout} style={{float:'right',marginRight:'50px',marginTop:\"30px\"}}>Logout</button>\r\n                    <button onClick={this.position} style={{float:'left', marginLeft:'10px', marginTop:'30px'}}> Get Current Location </button>\r\n                </div>\r\n                <br />\r\n                <div className=\"imgUpload\" style={{marginLeft:\"80px\"}}>\r\n                  <Map\r\n                    google={this.props.google}\r\n                    center={{lat: 17.387140, lng: 78.491684}}\r\n                    width=\"800px\"\r\n                    height=\"500px\"\r\n                    zoom={15}\r\n                  />\r\n                  <br></br>\r\n                  <div style={{float:'right',position:'relative', margin:\"50px\"}}>\r\n                    <input className=\"inputType\" type=\"file\" onChange={this.handleChange} \r\n                        name=\"user[image]\" \r\n                        ref=\"file\"\r\n                        multiple=\"false\" /><br /><br />\r\n                      <img\r\n                      src={this.state.imgSrc || \"https://via.placeholder.com/400x300?text=Your+Image+will+be+displayed+here\"}\r\n                      alt=\"Uploaded Images\"\r\n                      width=\"400\"\r\n                      height=\"300\"\r\n                      /><br /><br />\r\n                    \r\n                    <button\r\n                      onClick={this.handleUpload}> Upload </button>\r\n                    <br/>\r\n                   \r\n                    <button\r\n                      onClick={this.handleMarker}\r\n                    >Add Marker</button>\r\n                    <br></br>\r\n                    <button\r\n                      onClick={this.delete.bind(this,this.state.key)}\r\n                    >Delete</button>\r\n                  </div>\r\n                    \r\n                  </div>         \r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  ","import React, {Component} from 'react';\nimport fire from './config/Fire';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport './App.css';\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: null\n    }\n  }\n  componentDidMount(){\n    this.authListener();\n  }\n  authListener(){\n    fire.auth().onAuthStateChanged((user) => {\n      if(user){\n        this.setState({user});\n      }else{\n        this.setState({user:null});\n      }\n    });\n  }\n  render(){\n    return (\n        <div>\n          Welcome!\n          {this.state.user ? (<Home />) : (<Login />)}\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}